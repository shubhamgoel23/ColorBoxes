{"version":3,"sources":["helper.js","Box.js","BoxContainer.js","App.js","reportWebVitals.js","index.js"],"names":["choice","arr","Math","floor","random","length","Box","props","state","color","allColors","handleClick","bind","newColor","this","setState","pickColor","className","style","backgroundColor","onClick","Component","defaultProps","BoxContainer","boxes","Array","from","numBoxes","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAEA,SAASA,EAAOC,GAEZ,OAAOA,EADWC,KAAKC,MAAMD,KAAKE,SAAWH,EAAII,S,ICC/CC,E,kDAKF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CAACC,MAAMT,EAAO,EAAKO,MAAMG,YACtC,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAHL,E,wDAOd,IAAIC,EACJ,GACIA,EAAWb,EAAOc,KAAKP,MAAMG,iBACxBG,IAAaC,KAAKN,MAAMC,OACjCK,KAAKC,SAAS,CAACN,MAAMI,M,oCAIrBC,KAAKE,c,+BAIL,OACI,qBAAKC,UAAU,MACXC,MAAO,CAACC,gBAAgBL,KAAKN,MAAMC,OACnCW,QAASN,KAAKH,kB,GA3BZU,aAAZf,EACKgB,aAAe,CAClBZ,UAAW,CAAC,SAAU,UAAW,SAAU,SAkCpCJ,QCpCTiB,G,6KAOO,IAAD,OACEC,EAAQC,MAAMC,KAAK,CAACrB,OAAOS,KAAKP,MAAMoB,WAAWC,KACnD,kBAAM,cAAC,EAAD,CAAKlB,UAAW,EAAKH,MAAMG,eAErC,OACI,qBAAKO,UAAU,eAAf,SACKO,Q,GAbUH,cAArBE,EAEKD,aAAe,CAClBK,SAAU,GACVjB,UAAW,CAAC,SAAU,UAAW,SAAU,SAcpCa,Q,MCXAM,MARf,WACE,OACE,qBAAKZ,UAAU,MAAf,SACE,cAAC,EAAD,OCMSa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b9a042f0.chunk.js","sourcesContent":["/** Return a random item from a list. */\r\n\r\nfunction choice(arr) {\r\n    let randomIndex = Math.floor(Math.random() * arr.length);\r\n    return arr[randomIndex];\r\n  }\r\n  \r\n  export { choice };\r\n  ","import React, { Component } from 'react'\r\nimport './Box.css'\r\nimport {choice} from './helper'\r\n\r\nclass Box extends Component {\r\n    static defaultProps = {\r\n        allColors: [\"purple\", \"magenta\", \"violet\", \"pink\"]\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {color:choice(this.props.allColors)};\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    pickColor(){\r\n        let newColor;\r\n        do {\r\n            newColor = choice(this.props.allColors);\r\n        } while (newColor === this.state.color);\r\n        this.setState({color:newColor});\r\n    }\r\n\r\n    handleClick(){\r\n        this.pickColor();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='Box' \r\n                style={{backgroundColor:this.state.color}} \r\n                onClick={this.handleClick} \r\n            >\r\n\r\n            </div>\r\n        )\r\n    }\r\n    \r\n}\r\n\r\nexport default Box;","import React, { Component } from 'react'\r\nimport Box from './Box'\r\nimport './BoxContainer.css'\r\n\r\nclass BoxContainer extends Component{\r\n\r\n    static defaultProps = {\r\n        numBoxes: 18,\r\n        allColors: [\"purple\", \"magenta\", \"violet\", \"pink\"]\r\n    }\r\n\r\n    render(){\r\n        const boxes = Array.from({length:this.props.numBoxes}).map(\r\n            () => <Box allColors={this.props.allColors} />\r\n        )\r\n        return(\r\n            <div className='BoxContainer'>\r\n                {boxes}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default BoxContainer;","import BoxContainer from './BoxContainer'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BoxContainer />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}